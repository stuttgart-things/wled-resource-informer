---
apiVersion: v1
kind: Namespace
metadata:
  name: wri
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wled-resource-informer
  namespace: wri
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-segement-config
  namespace: wri
data:
  wledurl: "192.168.8.100"
  namespace: croco
  brightness: "100"
  node11: "0"
  node12: "1"
  node13: "2"
  node14: "3"
  node21: "4"
  node22: "5"
  node23: "6"
  node24: "7"
  node31: "8"
  node32: "9"
  node33: "10"
  node34: "11"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wled-resource-informer
  namespace: wri
  labels:
    app: wled-resource-informer
spec:
  selector:
    matchLabels:
      name: wled-resource-informer
  template:
    metadata:
      labels:
        name: wled-resource-informer
    spec:
      tolerations:
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      serviceAccountName: wled-resource-informer
      containers:
      - name: wled-resource-informer
        image: eu.gcr.io/stuttgart-things/wled-resource-informer:0.1.8
        envFrom:
          - configMapRef:
              name: node-segement-config
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wled-resource-informer
  namespace: wri
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wled-resource-informer
  namespace: wri
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wled-resource-informer
subjects:
- kind: ServiceAccount
  name: wled-resource-informer
  namespace: wri
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: list-all-namespaces
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: list-all-namespaces
subjects:
- kind: ServiceAccount
  name: wled-resource-informer
  namespace: wri
roleRef:
  kind: ClusterRole
  name: list-all-namespaces
  apiGroup: rbac.authorization.k8s.io
